Excesselt is a ruby library that I built because I hate XSLT.
I've extracted it from an app I built for work, so it scratches some specific itches and leaves some others unscratched.
It solves the same problem as XSLT does (that is, how can I transform this xml document into some other format).

Use:
gem install excesselt

class MyStylesheet < ExcessELT::Stylesheet
  def rules
  	render('parent > child') 	{ builder.p(child_content, :style => "child_content")   }
  	render('parent') 			{ builder.p(child_content, :style => "parent_content")  }
    render('text()')    		{ _ node.to_xml.upcase                                 	}
  end
end

MyStylesheet.transform <<-XML
<parent>
  <child>Some Text</child>
</parent>
XML
-> <p style="parent_content"><p style="child_content">SOME TEXT</p></p>

Written by Daniel Heath (@danielrheath, daniel.r.heath@gmail.com) as part of his work at Lonely Planet.
Released under the MIT licence.
(C) Daniel Heath and Lonely Planet.

Documentation:
Currently none. I need to write some.

Supported platforms:

Contributing:
Standard for github/ruby projects: fork, patch, pull request.

